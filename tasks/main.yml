---

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_os_family }}.yml"
    - "../vars/empty.yml"

- name: Install dnsmasq
  become: yes
  apt:
    name: "{{ dnsmasq_package }}"
    state: present
    install_recommends: false

- name: 'Prepare directories'
  become: yes
  file:
    path: "{{ item.name }}"
    mode: "{{ item.mode }}"
    owner: root
    group: root
    state: directory
  with_items:
    - { name: /etc/dnsmasq.d,            mode: '0755' }

- name: Configs
  become: yes
  template:
    src:  "configs/{{ item|default('empty.j2') }}.j2"
    dest: "{{ dnsmasq_configs_dir }}/{{ item }}.conf"
  with_items: "{{ dnsmasq_configs }}"
  notify:
    - dnsmasq restart

- name: Update main config
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  notify:
    - dnsmasq-systemctl-reload
    - dnsmasq restart
  when: item.when
  with_items:
    - { src: "dnsmasq.conf.j2",     dest: "/etc/dnsmasq.conf",                    mode: '0644', when: true }
    - { src: "dnsmasq.j2",          dest: "/etc/default/dnsmasq",                 mode: '0644', when: true }
    - { src: "resolv.conf.j2",      dest: "/etc/resolv.conf.dnsmasq",             mode: '0644',
        when: "{{ dnsmasq_dnsservers|length > 0 }}" }
    - { src: "dnsmasq.service.j2",  dest: "/etc/systemd/system/dnsmasq.service",  mode: '0644',
        when: "{{ ansible_service_mgr == 'systemd' }}" }

- name: Start services dnsmasq
  become: yes
  service:
    name:  "{{ item }}"
    state: started
    enabled: true
  with_items:
    - dnsmasq

- import_tasks: ndp.yml
  when: dnsmasq_ndp
